"========================================
"	Pathogen autoload
"========================================

runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()

" ================ General Config ====================

set nocompatible                "Cancel compatibility with VI
set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set gcr=a:blinkon0              "Disable cursor blink
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim
set fileformats=unix,dos
set encoding=utf-8
set nuw=6                       "Number column width

let mapleader=','

" ================ Navigation Settings  =================
set whichwrap=<,>,[,]

" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

"turn on syntax highlighting
syntax on

" ================ Search Settings  =================

set incsearch        "Find the next match as we type the search
set hlsearch         "Hilight searches by default
set viminfo='100,f1  "Save up to 100 marks, enable capital marks
set ignorecase 	     "Ignore case of searches
set smartcase

au VimEnter * nohls   "End searches on quit

" ================ Turn Off Swap Files ==============

set noswapfile
set nobackup
set nowb

" ================ Persistent Undo ==================
" Keep undo history across sessions, by storing in file.
" Only works all the time.
silen !mkdir ~/.vim/runtime > /dev/null 2>&1

silent !mkdir ~/.vim/runtime/undodir > /dev/null 2>&1
set undodir=~/.vim/runtime/undodir//
set undofile

silent !mkdir ~/.vim/runtime/undodir > /dev/null 2>&1
set backupdir=~/.vim/runtime/undodir//

silent !mkdir ~/.vim/runtime/swapdir > /dev/null 2>&1
set backupdir=~/.vim/runtime/swapdir//

" ================ Indentation ======================

filetype plugin on
filetype indent on

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

" ================ Whitespace Formatting ============================

" Display tabs and trailing spaces visually
"set listchars=nbsp:¬,eol:¶,tab:▸\,extends:»,precedes:«,trail:·
set listchars=nbsp:¬,eol:¶,tab:>-,extends:»,precedes:«,trail:·
set nolist

set nowrap       "Don't wrap lines
set linebreak    "Wrap lines at convenient points

" ================ Folds ============================

set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" ================ Completion =======================

set wildmode=full
set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*DS_Store*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif

" ================ Scrolling ========================

set scrolloff=8         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

" Respect modeline in files
set modeline
set modelines=4


" Don’t reset cursor to start of line when moving around.
set nostartofline

" Show the cursor position
set ruler

" Don’t show the intro message when starting Vim
set shortmess=atI

" Always show status line
set laststatus=2

" Enable mouse in all modes
set mouse=a

" Show the filename in the window titlebar
set title

" Use the OS clipboard by default (on versions compiled with `+clipboard`)
set clipboard=unnamed

" ================ Terminal Hacks ========================

if $COLORTERM == 'gnome-terminal'
  set t_Co=256
endif

" ================ Colorschemes ========================

colorscheme solarized
set background=light

" ================ OmniComplete ========================

autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete

" ================ Gvim Specifics  ========================
" T => no toolbar
" m => no menu
" RrLlb => no scrollbars
" e => no gui tabs
" + to fix bug

if has('gui_running')
  set guioptions=TmRrbLle
  set guioptions-=TmRrbLle

  " a => global visual copy/cut
  set guioptions+=ac
endif

" ================ php  ========================

" run file with PHP CLI (CTRL-K)
:autocmd FileType php noremap <leader>m :w!<CR>:!/usr/bin/php %:p<CR>

" PHP parser check (CTRL-L)
:autocmd FileType php noremap <leader>l :!/usr/bin/php -l %:p<CR>

" ================ html  ========================

" ================ C++  ========================

" ================ Javascript ========================

" indent
au FileType javascript setl nocindent

" ================ Python ========================
 
" indent
autocmd FileType python setlocal tabstop=8 expandtab shiftwidth=4 softtabstop=4

" running
autocmd FileType python noremap <leader>m :!/usr/bin/env python % <CR>

" ================ Remaps  ========================

map <C-\>       :exec("tag ".expand("<cword>"))<CR>
map <C-]>       :tab split<CR>:exec("tag ".expand("<cword>"))<CR>

" tab navigation
map <leader>z   :tabprevious<cr>
map <leader>x   :tabnext<cr>

" toggles listing of white-space
nmap <F9>       :set list!<cr>

" removes trailing white-space
nmap <S-F9>     :%s/\s\+$//<cr>

" space toggles folding
nnoremap <silent> <Space> @=(foldlevel('.')?'za':"\<Space>")<CR>

" ================ Sourcing .vimrc  ========================
au! BufWritePost .vimrc source %
